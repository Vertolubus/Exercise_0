#pragma once

#include <iostream>

namespace BoxAndContainer {
	//Задание 1. Структура Box с полями и конструктор.
	class Box
	{
	private:
		int length; //Длина
		int width; //Ширина
		int height; //Высота 
		double weight; //масса коробки в кг
		int value; // стоимость содержимого в копейках

	public:
		Box(int length, int width, int height, double weight, int value);
		Box();

		int getLength() const;
		int getWidth() const;
		int getHeight() const;
		double getWeight() const;
		int getValue() const;

		void setLength(int length);
		void setWidth(int width);
		void setHeight(int height);
		void setWeight(double weight);
		void setValue(int value);
	};


	//Задание 2. Вычисление суммарной стоимости содержиммого всех коробок.
	int sumValue(Box box[], int n);

	//Задание 3. Проверка того, что сумма длины, ширины и высоты всех коробок не превосходит заданного значения.
	//Функция возвращает false, если сумма превысила одно или несколько из заданных значений.
	//Функция возвращает true, если заданные значения не превышены.
	bool lessThanTheSpecifiedValue(Box box[], int n, int maxValue);

	//Задание 4.  Функция, которая определяет максимальный вес коробок, объем которых не больше параметра maxV.
	double volumCheck(Box box[], int n, int maxV);

	//Задание 5. Функция проверяет, можно ли вложить одну коробку в другую, начиная с наименьшей, учитывая то, что длина, ширина и высота одной коробки 
	//не превосходит значения другой.
	bool matryoshka(Box box[], int n);

	//Задание 6. Оператор cравнения двух коробок по всем параметрам.
	bool operator==(const Box& box1, const Box& box2);

	//Задание 7. Операторы ввода/вывода (>> и <<) для коробок в произвольные потоки. 
	std::istream& operator>>(std::istream& in, Box& box);

	std::ostream& operator<<(std::ostream& out, const Box& box);
}